description: |
  Authenticate to Google Cloud Platform Container Cluster.
  This command requires four parameters:
  1. Google Cloud Service Key
  2. Google Cloud Container Cluster
  3. Google Cloud Container Zone or Region
  4. Google Cloud Project ID

parameters:
  gcp-service-key:
    description: |
      The credentials for the Service Account to be used when communicating to Google Cloud.
      If not provided, the command will look for the environment variable $GCLOUD_SERVICE_KEY

      To obtain the key for this command,
      use either the Google Cloud Platform Console or gcloud iam service-accounts keys create.
      The key can be .json (preferred) or .p12 (legacy) format.
    type: string
    default: ""
  gcp-container-cluster:
    description: |
      The name of the Google Cloud container cluster to use.
      If not provided, the command will look for the environment variable $CLOUDSDK_CONTAINER_CLUSTER.
      To obtain the name of your clusters,
      use the Google Cloud Platform Console (Command: gcloud container clusters list)
    type: string
    default: ""
  gcp-container-zone:
    description: |
      The zone of this cluster.
      If not provided, the command will look for the environment variable $CLOUDSDK_COMPUTE_ZONE.
    type: string
    default: ""
  gcp-container-region:
    description: |
      The region of this cluster. Must be specified if you want to use reginal clusters.
    type: string
    default: ""
  gcp-container-project:
    description: |
      The project of this cluster.
      If not provided, the command will look for the environment variable $CLOUDSDK_CORE_PROJECT.
    type: string
    default: ""

steps:
  - authenticate-gcp:
      gcp-service-key: << parameters.gcp-service-key >>
  - run:
      name: Get credentials from cluster.
      command: |
        CLUSTER="<< parameters.gcp-container-cluster >>"
        if [[ -n "${CLUSTER}" ]]; then
          echo "Using cluster provided in parameters."
        elif [[ -n "${CLOUDSDK_CONTAINER_CLUSTER}" ]]; then
          echo "Using cluster from environment."
          CLUSTER="${CLOUDSDK_CONTAINER_CLUSTER}"
        else
          echo "No cluster were found. Looked in parameter gcp-container-cluster and environment CLOUDSDK_CONTAINER_CLUSTER."
        fi

        PROJECT="<< parameters.gcp-container-project >>"
        if [[ -n "${PROJECT}" ]]; then
          echo "Using project provided in parameters."
        elif [[ -n "${CLOUDSDK_CORE_PROJECT}" ]]; then
          echo "Using project from environment."
          PROJECT="${CLOUDSDK_CORE_PROJECT}"
        else
          echo "No project were found. Looked in parameter gcp-container-project and environment CLOUDSDK_CORE_PROJECT."
        fi

        ZONE="<< parameters.gcp-container-zone >>"
        if [[ -n "${ZONE}" ]]; then
          echo "Using zone provided in parameters."
        elif [[ -n "${CLOUDSDK_COMPUTE_ZONE}" ]]; then
          echo "Using zone from environment."
          ZONE="${CLOUDSDK_COMPUTE_ZONE}"
        else
          echo "No zone were found. Looked in parameter gcp-container-zone and environment CLOUDSDK_COMPUTE_ZONE."
        fi

        if [[ -n "${ZONE}" ]]; then
          echo "Setting "zone" parameter."
          set -- "$@" --zone=${ZONE}
        fi

        REGION="<< parameters.gcp-container-region >>"
        if [[ -n "${REGION}" ]]; then
          echo "Using region provided in parameters."
          set -"$@" --region=${REGION}"
        else
          echo "No region was found. Looked in parameter gcp-container-region."
        fi

        gcloud --quiet config set project ${PROJECT}
        gcloud --quiet container clusters get-credentials ${CLUSTER} "$@"
